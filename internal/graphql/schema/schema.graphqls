type Query {
  getUsers: [User!]!
  getUser(userID: ID!): User

  getCampaigns: [Campaign!]!
  getCampaign(campaignID: ID!): Campaign

  getAllLeads: [Lead!]!
  getOneLead(lead_id: String!): Lead
  me: User

  getOrganizations: [Organization!]!
  getOrganizationByID(id: ID!): Organization
}

type Mutation {
  login(email: String!, password: String!): AuthPayload!

  createUser(input: CreateUserInput!): User!
  updateUser(user_id: ID!, input: UpdateUserInput!): User!
  deleteUser(user_id: ID!): User!

  createOrganization(input: CreateOrganizationInput!): Organization!

  createCampaign(input: CreateCampaignInput!): Campaign!
  addUserToCampaign(userID: ID!, campaignID: ID!): Campaign!
  removeUserFromCampaign(userID: ID!, campaignID: ID!): Campaign!

  createLead(input: CreateLeadInput!): Lead!
  updateLead(lead_id: ID!, input: UpdateLeadInput!): Lead!
  deleteLead(lead_id: ID!): Lead!
  createLeadWithActivity(input: CreateLeadWithActivityInput!): Lead!

  createDeal(input: CreateDealInput!): Deal!

  createActivity(input: CreateActivityInput!): Activity!
  updateActivity(activity_id: ID!, input: UpdateActivityInput!): Activity!
  deleteActivity(activity_id: ID!): Activity!
}

enum UserRole {
  ADMIN
  SALES_EXECUTIVE
  MANAGER
}
type AuthPayload {
  token: String!
  user: User!
}

type Campaign {
  campaignID: ID!
  campaignName: String!
  campaignCountry: String!
  campaignRegion: String!
  industryTargeted: String!
  users: [User!]!
  leads: [Lead!]! # One Campaign can have multiple Leads
}

type User {
  userID: ID!
  googleId: String
  name: String!
  email: String!
  phone: String!
  role: String!
  password: String!
  campaigns: [Campaign!]!
}

enum LeadPriority {
  HIGH
  MEDIUM
  LOW
}

enum LeadStage {
  NEW
  IN_PROGRESS
  FOLLOW_UP
  CLOSED_WON
  CLOSED_LOST
}

type Lead {
  leadID: ID!
  firstName: String!
  lastName: String!
  email: String!
  linkedIn: String!
  country: String!
  phone: String!
  leadSource: String!
  initialContactDate: String!
  leadCreatedBy: User!
  leadAssignedTo: User!
  leadStage: String!
  leadNotes: String!
  leadPriority: String!
  organization: Organization!
  campaign: Campaign!
  activities: [Activity!]!
}

type Organization {
  ID: ID!
  organizationName: String!
  organizationEmail: String!
  organizationWebsite: String
  city: String!
  country: String!
  noOfEmployees: String!
  annualRevenue: String!
  leads: [Lead!]! # One Organization can have multiple Leads
}

type Activity {
  activity_id: ID!
  activityType: String!
  dateTime: String!
  communicationChannel: String!
  contentNotes: String!
  participantDetails: String!
  followUpActions: String!
  leadId: ID!
}

type Deal {
  dealID: ID!
  dealName: String!
  leadID: ID!
  dealStartDate: String!
  dealEndDate: String!
  ProjectRequirements: String!
  dealAmount: String!
  dealStatus: String!
}

input CreateDealInput {
  dealName: String!
  leadID: ID!
  dealStartDate: String!
  dealEndDate: String!
  ProjectRequirements: String!
  dealAmount: String!
  dealStatus: dealStatus!
}

enum dealStatus {
  STARTED
  PENDING
  COMPLETED
}

input CreateCampaignInput {
  campaignName: String!
  campaignCountry: String!
  campaignRegion: String!
  industryTargeted: String!
}
input CreateUserInput {
  googleId: String
  name: String!
  password: String!
  email: String!
  phone: String
  role: UserRole!
}

input UpdateUserInput {
  name: String
  email: String
  phone: String
  role: UserRole
}

input CreateLeadWithActivityInput {
  firstname: String!
  lastname: String!
  email: String!
  linkedIn: String!
  country: String!
  phone: String!
  leadSource: String!
  initialContactDate: String!
  leadAssignedTo: ID!
  leadStage: LeadStage!
  leadNotes: String!
  leadPriority: LeadPriority!
  organizationID: String!
  campaignID: String!
  activityType: String!
  dateTime: String!
  communicationChannel: String!
  contentNotes: String!
  participantDetails: String!
  followUpActions: String!
}

input CreateLeadInput {
  firstName: String!
  lastName: String!
  email: String!
  linkedIn: String!
  country: String!
  phone: String!
  leadSource: String!
  initialContactDate: String!
  leadAssignedTo: ID!
  leadStage: LeadStage!
  leadNotes: String!
  leadPriority: LeadPriority!
  organizationID: String!
  campaignID: String!
}

input UpdateLeadInput {
  firstName: String
  lastName: String
  email: String!
  linkedIn: String
  country: String
  phone: String
  leadSource: String!
  initialContactDate: String!
  leadAssignedTo: String!
  leadStage: LeadStage!
  leadNotes: String!
  leadPriority: LeadPriority!
  organizationID: String!
  campaignID: String!
}

input CreateActivityInput {
  activityType: String!
  dateTime: String!
  communicationChannel: String!
  contentNotes: String!
  participantDetails: String!
  followUpActions: String!
  leadId: ID!
}

input UpdateActivityInput {
  activityType: String
  dateTime: String
  communicationChannel: String
  contentNotes: String
  participantDetails: String
  followUpActions: String
}

input CreateOrganizationInput {
  organizationName: String!
  organizationEmail: String!
  organizationWebsite: String
  city: String!
  country: String!
  noOfEmployees: String!
  annualRevenue: String!
}
